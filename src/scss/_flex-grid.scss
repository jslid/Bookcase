/* Bookcase - Flex Grid */

	// - Flexbox Common
	// - Flex Directions
	// - Flex Columns and Positioning


// Inspiration from the following flexbox grids: 
		
		// - https://github.com/ptb/flexgrid
		// - https://github.com/alexander-ruehle/bobscss
		// - https://github.com/kristoferjoseph/flexboxgrid
		// - https://github.com/zemirco/flexbox-grid
		//- https://github.com/philipwalton/solved-by-flexbox


// FLEXBOX COMMON

	.flexbox-common {
		@include box-sizing(border-box);
		@include flexbox-container;
		@include flex(1, 0, auto);
		@include flex-wrap(wrap);
		@include margin-left(-$flex-gutter);
		@include margin-right(-$flex-gutter);
	}

// FLEX ROWS & COLUMNS

	.flex-row {
		@extend .flexbox-common;
		@include flex-direction(row);
	}

	.flex-row-reverse {
		@extend .flexbox-common;
		@include flex-direction(row-reverse);
	}

	.flex-column {
		@extend .flexbox-common;
		@include flex-direction(column);
	}

	.flex-column-reverse {
		@extend .flexbox-common;
		@include flex-direction(column-reverse);
	}


// FLEX COLUMNS & POSITIONING

	// Mobile/Extra Small (xs) Flex Grid - Columns and Offsets

		// Build Columns

		.flex, .flex-xs {
			@include box-sizing(border-box);
			@include flex(0, 0, auto);
			@include padding-left($flex-gutter);
			@include padding-right($flex-gutter);
			display: flex;
			-webkit-flex-direction: column;
			-ms-flex-direction: column;
			flex-direction: column;
		}

		@for $i from 1 through $flex-columns - 1 {
			.flex-#{$i}, .flex-#{$i}-xs {
				@extend .flex;
			}
		}

		@for $i from 1 through $flex-columns {
			.flex-#{$i}, .flex-#{$i}-xs {
				width: ($i / $flex-columns) * 100%;
			}
		}


		// Flex Positioning

		.flex-start, .flex-start-xs {
			@include flex-justify(flex-start);
		}

		.flex-center, .flex-center-xs {
			@include flex-justify(center);
		}

		.flex-end, .flex-end-xs {
			@include flex-justify(flex-end);
		}

		.flex-around, .flex-around-xs {
			@include flex-justify(space-around);
		}

		.flex-between, .flex-between-xs {
			@include flex-justify(space-between);
		}

		.flex-top, .flex-top-xs {
			@include flex-align-items(flex-start);
		}

		.flex-middle, .flex-middle-xs {
			@include flex-align-items(center);
		}

		.flex-bottom, .flex-bottom-xs {
			@include flex-align-items(flex-end);
		}

		.flex-stretch, .flex-stretch-xs {
			@include flex-align-items(stretch);
		}

		.flex-baseline, .flex-baseline-xs {
			@include flex-align-items(baseline);
		}

		// Flex Order

		.flex-order-start, .flex-order-start-xs {
			@include flex-order(-1);
		}

		.flex-order-end, .flex-order-end-xs {
			@include flex-order(1);
		}


	// Phablet/Small (sm) Flex Grid - Columns and Offsets

	@media only screen and (min-width: $breakpoint-phablet) {

		// Build Columns

		.flex-phablet, .flex-sm {
			@include box-sizing(border-box);
			@include flex(0, 0, auto);
			@include padding-left($flex-gutter-phablet);
			@include padding-right($flex-gutter-phablet);
			display: flex;
			-webkit-flex-direction: column;
			-ms-flex-direction: column;
			flex-direction: column;
		}

		@for $i from 1 through $flex-columns - 1 {
			.flex-#{$i}-phablet, .flex-#{$i}-sm {
				@extend .flex-phablet;
			}
		}

		@for $i from 1 through $flex-columns {
			.flex-#{$i}-phablet, .flex-#{$i}-sm {
				width: ($i / $flex-columns) * 100%;
			}
		}


		// Flex Positioning

		.flex-start-phablet, .flex-start-sm {
			@include flex-justify(flex-start);
		}

		.flex-center-tphablet, .flex-center-sm {
			@include flex-justify(center);
		}

		.flex-end-phablet, .flex-end-sm {
			@include flex-justify(flex-end);
		}

		.flex-around-phablet, .flex-around-sm {
			@include flex-justify(space-around);
		}

		.flex-between-phablet, .flex-between-sm {
			@include flex-justify(space-between);
		}

		.flex-top-phablet, .flex-top-sm {
			@include flex-align-items(flex-start);
		}

		.flex-middle-phablet, .flex-middle-sm {
			@include flex-align-items(center);
		}

		.flex-bottom-phablet, .flex-bottom-sm {
			@include flex-align-items(flex-end);
		}

		.flex-stretch-phablet, .flex-stretch-sm {
			@include flex-align-items(stretch);
		}

		.flex-baseline-phablet, .flex-baseline-sm {
			@include flex-align-items(baseline);
		}

		// Flex Order

		.flex-order-start-phablet, .flex-order-start-sm {
			@include flex-order(-1);
		}

		.flex-order-end-phablet, .flex-order-end-sm {
			@include flex-order(1);
		}
	}


	// Tablet/Medium (md) Flex Grid - Columns and Offsets

	@media only screen and (min-width: $breakpoint-tablet) {

		// Build Columns

		.flex-tablet, .flex-md {
			@include box-sizing(border-box);
			@include flex(0, 0, auto);
			@include padding-left($flex-gutter-tablet);
			@include padding-right($flex-gutter-tablet);
			display: flex;
			-webkit-flex-direction: column;
			-ms-flex-direction: column;
			flex-direction: column;
		}

		@for $i from 1 through $flex-columns - 1 {
			.flex-#{$i}-tablet, .flex-#{$i}-md {
				@extend .flex-tablet;
			}
		}

		@for $i from 1 through $flex-columns {
			.flex-#{$i}-tablet, .flex-#{$i}-md {
				width: ($i / $flex-columns) * 100%;
			}
		}


		// Flex Positioning

		.flex-start-tablet, .flex-start-md {
			@include flex-justify(flex-start);
		}

		.flex-center-tablet, .flex-center-md {
			@include flex-justify(center);
		}

		.flex-end-tablet, .flex-end-md {
			@include flex-justify(flex-end);
		}

		.flex-around-tablet, .flex-around-md {
			@include flex-justify(space-around);
		}

		.flex-between-tablet, .flex-between-md {
			@include flex-justify(space-between);
		}

		.flex-top-tablet, .flex-top-md {
			@include flex-align-items(flex-start);
		}

		.flex-middle-tablet, .flex-middle-md {
			@include flex-align-items(center);
		}

		.flex-bottom-tablet, .flex-bottom-md {
			@include flex-align-items(flex-end);
		}

		.flex-stretch-tablet, .flex-stretch-md {
			@include flex-align-items(stretch);
		}

		.flex-baseline-tablet, .flex-baseline-md {
			@include flex-align-items(baseline);
		}

		// Flex Order

		.flex-order-start-tablet, .flex-order-start-md {
			@include flex-order(-1);
		}

		.flex-order-end-tablet, .flex-order-end-md {
			@include flex-order(1);
		}
	}


	// Desktop/Large (ld) Flex Grid - Columns and Offsets

	@media only screen and (min-width: $breakpoint-desktop) {

		// Build Columns

		.flex-desktop, .flex-lg {
			@include box-sizing(border-box);
			@include flex(0, 0, auto);
			@include padding-left($flex-gutter-desktop);
			@include padding-right($flex-gutter-desktop);
			display: flex;
			-webkit-flex-direction: column;
			-ms-flex-direction: column;
			flex-direction: column;
		}

		@for $i from 1 through $flex-columns - 1 {
			.flex-#{$i}-desktop, .flex-#{$i}-lg {
				@extend .flex-desktop;
			}
		}

		@for $i from 1 through $flex-columns {
			.flex-#{$i}-desktop, .flex-#{$i}-lg {
				width: ($i / $flex-columns) * 100%;
			}
		}


		// Flex Positioning

		.flex-start-desktop, .flex-start-lg {
			@include flex-justify(flex-start);
		}

		.flex-center-desktop, .flex-center-lg {
			@include flex-justify(center);
		}

		.flex-end-desktop, .flex-center-lg {
			@include flex-justify(flex-end);
		}

		.flex-around-desktop, .flex-around-lg {
			@include flex-justify(space-around);
		}

		.flex-between-desktop, .flex-between-lg {
			@include flex-justify(space-between);
		}

		.flex-top-desktop, .flex-top-lg {
			@include flex-align-items(flex-start);
		}

		.flex-middle-desktop, .flex-middle-lg {
			@include flex-align-items(center);
		}

		.flex-bottom-desktop, .flex-bottom-lg {
			@include flex-align-items(flex-end);
		}

		.flex-stretch-desktop, .flex-stretch-lg {
			@include flex-align-items(stretch);
		}

		.flex-baseline-desktop, .flex-baseline-lg {
			@include flex-align-items(baseline);
		}

		// Flex Order

		.flex-order-start-desktop, .flex-order-start-lg {
			@include flex-order(-1);
		}

		.flex-order-end-desktop, .flex-order-end-lg {
			@include flex-order(1);
		}
	}


	// HD/Extra Large (xl) Flex Grid - Columns and Offsets

	@media only screen and (min-width: $breakpoint-hd) {

		// Build Columns

		.flex-hd, .flex-xl {
			@include box-sizing(border-box);
			@include flex(0, 0, auto);
			@include padding-left($flex-gutter-hd);
			@include padding-right($flex-gutter-hd);
			display: flex;
			-webkit-flex-direction: column;
			-ms-flex-direction: column;
			flex-direction: column;
		}

		@for $i from 1 through $flex-columns - 1 {
			.flex-#{$i}-hd, .flex-#{$i}-xl {
				@extend .flex-hd;
			}
		}

		@for $i from 1 through $flex-columns {
			.flex-#{$i}-hd, .flex-#{$i}-xl {
				width: ($i / $flex-columns) * 100%;
			}
		}


		// Flex Positioning

		.flex-start-hd, .flex-start-xl {
			@include flex-justify(flex-start);
		}

		.flex-center-hd, .flex-center-xl {
			@include flex-justify(center);
		}

		.flex-end-hd, .flex-end-xl {
			@include flex-justify(flex-end);
		}

		.flex-around-hd, .flex-around-xl {
			@include flex-justify(space-around);
		}

		.flex-between-hd, .flex-between-xl {
			@include flex-justify(space-between);
		}

		.flex-top-hd, .flex-top-xl {
			@include flex-align-items(flex-start);
		}

		.flex-middle-hd, .flex-middle-xl {
			@include flex-align-items(center);
		}

		.flex-bottom-hd, .flex-bottom-xl {
			@include flex-align-items(flex-end);
		}

		.flex-stretch-hd, .flex-stretch-xl {
			@include flex-align-items(stretch);
		}

		.flex-baseline-hd, .flex-baseline-xl {
			@include flex-align-items(baseline);
		}

		// Flex Order

		.flex-order-start-hd, .flex-order-start-xl {
			@include flex-order(-1);
		}

		.flex-order-end-hd, .flex-order-end-xl {
			@include flex-order(1);
		}
	}
